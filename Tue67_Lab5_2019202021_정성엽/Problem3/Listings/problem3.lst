


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             ARMex, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         start
    4 00000000 E3A0000A        MOV              R0, #10     ;R0=10
    5 00000004 E3A0100B        MOV              R1, #11     ;R1=11
    6 00000008 E3A0200C        MOV              R2, #12     ;R2=12
    7 0000000C E3A0300D        MOV              R3, #13     ;R3=13
    8 00000010 E3A0400E        MOV              R4, #14     ;R4=14
    9 00000014 E3A0500F        MOV              R5, #15     ;R5=15
   10 00000018 E3A06010        MOV              R6, #16     ;R6=16
   11 0000001C E3A07011        MOV              R7, #17     ;R7=17
   12 00000020 E3A080A0        MOV              R8, #160    ;R8=160
   13 00000024 E1A0B004        MOV              R11, R4     ; R11= R4
   14 00000028 E59F90B4        LDR              R9, TEMPADDR1 ;//load TEMPADDR1
                                                            
   15 0000002C E88900FF        STMIA            R9,{R0-R7}  ; //store first val
                                                            ue
   16 00000030         
   17 00000030 EB00000C        BL               doRegister  ; move to doRegiste
                                                            r label
   18 00000034 EB000024        BL               doGCD       ;move to doGCD labe
                                                            l
   19 00000038         
   20 00000038 E59FA0A4        LDR              R10, TEMPADDR1 ; load memory ad
                                                            dress
   21 0000003C E48AC004        STR              R12, [R10], #4 
                                                            ; store GCD Value
   22 00000040 E080000B        ADD              R0, R0, R11 ; ADD num
   23 00000044 E081100B        ADD              R1, R1, R11 ; ADD num
   24 00000048 E082200B        ADD              R2, R2, R11 ; ADD num
   25 0000004C E083300B        ADD              R3, R3, R11 ; ADD num
   26 00000050 E084400B        ADD              R4, R4, R11 ; ADD num
   27 00000054 E085500B        ADD              R5, R5, R11 ; ADD num
   28 00000058 E086600B        ADD              R6, R6, R11 ; ADD num
   29 0000005C E087700B        ADD              R7, R7, R11 ; ADD num
   30 00000060 E8AA00FF        STMIA            R10!,{R0-R7} ;//store regiser v
                                                            alue
   31 00000064 EA000020        B                Done        ; goto Done
   32 00000068         
   33 00000068         doRegister
   34 00000068 E59FD078        LDR              SP, TEMPADDR2 ; LOAD SP from TE
                                                            MPADDR2
   35 0000006C         
   36 0000006C E8AD0004        STMEA            SP!,{R2}    ; Push R2
   37 00000070 E8AD0001        STMEA            SP!,{R0}    ; Push R0
   38 00000074 E8AD0008        STMEA            SP!,{R3}    ; Push R3
   39 00000078 E8AD00E0        STMEA            SP!,{R5-R7} ; Push R5~R7
   40 0000007C E8AD0002        STMEA            SP!, {R1}   ; Push R1
   41 00000080 E8AD0010        STMEA            SP!, {R4}   ; Push R4
   42 00000084         
   43 00000084 E59FD05C        LDR              SP, TEMPADDR2 ; LOAD SP from TE
                                                            MPADDR2
   44 00000088 E89D00FF        LDMIA            SP, {r0-r7} ; POP R0~R7 to memo
                                                            ry address TEMPADDR
                                                            2
   45 0000008C         
   46 0000008C E2811001        ADD              R1, R1, #1  ;add 1
   47 00000090 E2822002        ADD              R2, R2, #2  ;add 2
   48 00000094 E2833003        ADD              R3, R3, #3  ;add 3



ARM Macro Assembler    Page 2 


   49 00000098 E2844004        ADD              R4, R4, #4  ;add 4
   50 0000009C E2855005        ADD              R5, R5, #5  ;add 5
   51 000000A0 E2866006        ADD              R6, R6, #6  ;add 6
   52 000000A4 E2877007        ADD              R7, R7, #7  ;add 7
   53 000000A8         
   54 000000A8         ;sum of R0~R7
   55 000000A8 E1A0C000        MOV              R12, R0     ;
   56 000000AC E08CC001        ADD              R12, R12, R1 ;
   57 000000B0 E08CC002        ADD              R12, R12, R2 ;
   58 000000B4 E08CC003        ADD              R12, R12, R3 ;
   59 000000B8 E08CC004        ADD              R12, R12, R4 ;
   60 000000BC E08CC005        ADD              R12, R12, R5 ;
   61 000000C0 E08CC006        ADD              R12, R12, R6 ;
   62 000000C4 E08CC007        ADD              R12, R12, R7 ;
   63 000000C8 E12FFF1E        BX               lr          ; //return lr
   64 000000CC         
   65 000000CC         doGCD
   66 000000CC E158000C        CMP              R8,R12      ; compare R8 and R1
                                                            2
   67 000000D0 B04CC008        SUBLT            R12, R12, R8 ; if R8>R12
   68 000000D4 BAFFFFFC        BLT              doGCD       ;
   69 000000D8         
   70 000000D8 C048800C        SUBGT            R8, R8, R12 ;if R12>R8
   71 000000DC CAFFFFFA        BGT              doGCD       ;
   72 000000E0         
   73 000000E0 012FFF1E        BXEQ             lr          ; if equal return l
                                                            r
   74 000000E4         
   75 000000E4         
   76 000000E4         
   77 000000E4 00040000 
                       TEMPADDR1
                               &                &40000
   78 000000E8 40000000 
                       TEMPADDR2
                               &                &40000000
   79 000000EC         
   80 000000EC         Done
   81 000000EC                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\problem3.d -o.\objects\problem3.o -IC:\Keil_v5\ARM\RV31\INC 
-IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISI
ON_VERSION SETA 529" --list=.\listings\problem3.lst Problem3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARMex 00000000

Symbol: ARMex
   Definitions
      At line 1 in file Problem3.s
   Uses
      None
Comment: ARMex unused
Done 000000EC

Symbol: Done
   Definitions
      At line 80 in file Problem3.s
   Uses
      At line 31 in file Problem3.s
Comment: Done used once
TEMPADDR1 000000E4

Symbol: TEMPADDR1
   Definitions
      At line 77 in file Problem3.s
   Uses
      At line 14 in file Problem3.s
      At line 20 in file Problem3.s

TEMPADDR2 000000E8

Symbol: TEMPADDR2
   Definitions
      At line 78 in file Problem3.s
   Uses
      At line 34 in file Problem3.s
      At line 43 in file Problem3.s

doGCD 000000CC

Symbol: doGCD
   Definitions
      At line 65 in file Problem3.s
   Uses
      At line 18 in file Problem3.s
      At line 68 in file Problem3.s
      At line 71 in file Problem3.s

doRegister 00000068

Symbol: doRegister
   Definitions
      At line 33 in file Problem3.s
   Uses
      At line 17 in file Problem3.s
Comment: doRegister used once
start 00000000

Symbol: start
   Definitions
      At line 3 in file Problem3.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: start unused
7 symbols
339 symbols in table
